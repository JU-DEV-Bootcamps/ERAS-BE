name: Enforce .editorconfig Rules and Check Build Warnings (Changed Files Only)

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  format-and-build-check:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Ensure full history is fetched to compare changes

      # Step 2: Setup .NET environment
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0 # Specify the required .NET SDK version

      # Step 3: Fetch all branches
      - name: Fetch all branches
        run: git fetch --all

      # Step 4: Ensure the base branch is fetched
      - name: Fetch base branch
        run: git fetch origin ${{ github.base_ref }}

      # Step 5: Get list of changed files
      - name: Get changed files
        id: changes
        run: |
          echo "Getting list of changed files..."
          git diff --name-only origin/${{ github.base_ref }} HEAD > changed-files.txt
          if [ -s changed-files.txt ]; then
            echo "CHANGED_FILES=$(cat changed-files.txt | tr '\n' ' ')" >> $GITHUB_ENV
          else
            echo "No changed files detected."
            echo "CHANGED_FILES=" >> $GITHUB_ENV
          fi

      # Step 6: Run dotnet format on the entire solution
      - name: Run dotnet format
        run: |
          echo "Running dotnet format on the entire solution..."
          dotnet format --verify-no-changes
        env:
          PATH: ${{ runner.tool_cache }}/dotnet:$PATH

      # Step 7: Build the project and capture warnings for changed files
      - name: Build the project
        if: env.CHANGED_FILES != ''
        run: |
          echo "Building project for changed files..."
          dotnet build --configuration Release --no-restore /warnaserror
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: 1

      # Step 8: Fail the workflow if build warnings or errors are found
      - name: Check build result
        if: failure()
        run: |
          echo "Build warnings or errors detected in changed files. Please fix them before merging."
          exit 1
