name: Enforce .editorconfig Rules and Check Build Warnings (Changed Files Only)

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  format-and-build-check:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Ensure full history is fetched to compare changes

      # Step 2: Fetch all branches
      - name: Fetch all branches
        run: git fetch --all

      # Step 3: Setup .NET environment
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0

      # Step 4: Get list of changed files
      - name: Get changed files
        id: changes
        run: |
          git diff --name-only origin/main ${{ github.head_ref }} > changed-files.txt
          echo "CHANGED_FILES=$(cat changed-files.txt)" >> $GITHUB_ENV

      # Step 5: Run dotnet format on changed files
      - name: Run dotnet format on changed files
        if: env.CHANGED_FILES != ''
        run: |
          echo "Formatting changed files..."
          for file in $(cat changed-files.txt); do
            if [[ $file == *.cs ]]; then
              echo "Formatting $file"
              dotnet format $file --verify-no-changes || exit 1
            fi
          done
        env:
          PATH: ${{ runner.tool_cache }}/dotnet:$PATH

      # Step 6: Build the project and capture warnings for changed files
      - name: Build the project
        if: env.CHANGED_FILES != ''
        run: |
          echo "Building project for changed files..."
          dotnet build --configuration Release --no-restore /warnaserror
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: 1

      # Step 7: Fail the workflow if build warnings or errors are found
      - name: Check build result
        if: failure()
        run: |
          echo "Build warnings or errors detected in changed files. Please fix them before merging."
          exit 1
