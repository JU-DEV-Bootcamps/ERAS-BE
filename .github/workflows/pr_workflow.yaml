name: Pull request workflow

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: "8.0"

      - name: Cleaning up old coverage reports
        run: rm -rf CoverletReport TestResults

      - name: Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: Restore dependencies
        run: dotnet restore

      - name: Build the project
        run: dotnet build --no-restore

      - name: Run tests
        run: dotnet test --no-build --verbosity normal

      - name: Run Tests with Coverage
        run: dotnet test --collect:"XPlat Code Coverage" --results-directory ./TestResults --settings coverlet.runsettings

      - name: Merge Coverage Reports
        run: |
          reportgenerator -reports:TestResults/**/coverage.cobertura.xml -targetdir:CoverletReport -reporttypes:TextSummary,Cobertura

      - name: Check Coverage Threshold
        run: |
          coverage=$(grep -oP 'Line coverage:\s+\K[0-9.]+' CoverletReport/Summary.txt)
          echo "Coverage: $coverage%"
          if (( $(echo "$coverage < 25.0" | bc -l) )); then
            echo "❌ Code coverage is below 25%. Failing the build."
            exit 1
          else
            echo "✅ Code coverage is above 25%."
          fi

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build Docker image
        run: |
          docker build -t test-build-image -f ./src/Eras.Api/Dockerfile .
